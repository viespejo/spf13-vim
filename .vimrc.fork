set guifont=Monaco\ for\ Powerline\ 10
set nobackup
set noswapfile
set nospell
set nocursorline
set noshowmatch
" Remove highlight color from current line number
"    highlight clear CursorLineNr
" Default clipboard value
    set clipboard=""
" Easy windows
    map <C-J> <C-W>j
    map <C-K> <C-W>k
    map <C-L> <C-W>l
    map <C-H> <C-W>h
    map <Leader>_ <C-w>_
" Maps Alt-[h,j,k,l] to resizing a window split
    map <silent> <A-h> <C-w><
    map <silent> <A-j> <C-W>-
    map <silent> <A-k> <C-W>+
    map <silent> <A-l> <C-w>>
" Tags
    set tags+=./.tags;/
" tunning performance
    set lazyredraw
    set ttyfast
" Unmappings
    unmap [F
    iunmap [F
    unmap [H
    iunmap [H

    unmap <
    unmap >
" JSON-plugin
let g:vim_json_syntax_conceal = 0
" Neocomplete
"let g:neocomplete#disable_auto_complete = 1
"inoremap <C-@> <C-Space>
"inoremap <expr><C-Space> neocomplete#start_manual_complete()

" Unbundle auto-close
    UnBundle 'spf13/vim-autoclose'
" Neocomplete {
    if count(g:spf13_bundle_groups, 'neocomplete')
        " Add snippets directories
        let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets,~/.vim/bundle/myconfig.vim/snippets'
        let g:neosnippet#disable_runtime_snippets = {
                \   '_' : 1,
                \ }
    endif
" }
" TagBar for PHP
let g:tagbar_type_php = {
    \ 'kinds' : [
        \ 'i:interfaces',
        \ 'c:classes',
        \ 'd:constant definitions:0:0',
        \ 'f:functions',
    \ ],
\ }
" YouCompleteMe {
    if count(g:spf13_bundle_groups, 'youcompleteme')
        let g:acp_enableAtStartup = 0

        " enable completion from tags
        let g:ycm_collect_identifiers_from_tags_files = 1

        " remap Ultisnips for compatibility for YCM
        let g:UltiSnipsExpandTrigger = '<C-j>'
        let g:UltiSnipsJumpForwardTrigger = '<C-j>'
        let g:UltiSnipsJumpBackwardTrigger = '<C-k>'

        " Enable omni completion.
        autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
        autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
        autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
        autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
        autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
        autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete
        autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc

        " Haskell post write lint and check with ghcmod
        " $ `cabal install ghcmod` if missing and ensure
        " ~/.cabal/bin is in your $PATH.
        if !executable("ghcmod")
            autocmd BufWritePost *.hs GhcModCheckAndLintAsync
        endif

        " For snippet_complete marker.
        if !exists("g:spf13_no_conceal")
            if has('conceal')
                set conceallevel=2 concealcursor=i
            endif
        endif

        " Disable the neosnippet preview candidate window
        " When enabled, there can be too much visual noise
        " especially when splits are used.
        set completeopt-=preview
    endif
" }
